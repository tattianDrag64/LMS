@inject ISeminarManager SeminarManager
@page "/registerseminar"

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Registrera nytt seminarium</h5>
        <EditForm Model="CreateSeminar" OnSubmit="AddSeminar">
            <DataAnnotationsValidator/>
            <div class="form-group">
                <label for="title">Titel</label>
                <InputText Id="title" class="form-control" @bind-Value="CreateSeminar.Title" />
                <ValidationMessage For="@(() => CreateSeminar.Title)" />
            </div>
            <div class="form-group">
                <label for="firstname">Föreläsarens förnamn</label>
                <InputText Id="firstname" class="form-control" @bind-Value="CreateSeminar.FirstName" />
                <ValidationMessage For="@(() => CreateSeminar.FirstName)" />
            </div>
            <div class="form-group">
                <label for="lastname">Föreläsarens efternamn</label>
                <InputText Id="lastname" class="form-control" @bind-Value="CreateSeminar.LastName" />
                <ValidationMessage For="@(() => CreateSeminar.LastName)" />
            </div>
            <div class="form-group">
                <label for="dayandtime">Datum</label>
                <InputDate min="TodaysDate" Id="dayandtime" class="form-control" @bind-Value="TodaysDate" />
                <ValidationMessage For="@(() => CreateSeminar.SeminarDate)" />
            </div>
            <div class="form-group">
                <label for="dayandtime">Tid</label>
                <input type="time" min="08:00" max="21:00" Id="dayandtime" class="form-control" @bind-value="CreateSeminar.SeminarTime"/>
                <ValidationMessage For="@(() => CreateSeminar.SeminarTime)" />
            </div>
            <div>
                <br />
                <MudButton Variant="Variant.Text" Color="Color.Primary" @onclick="() => AddSeminar()">Registrera seminarium</MudButton>
            </div>
        </EditForm>
    </div>
</div>

@if(message == $"\"{CreateSeminar.Title}\" har lagts till")
{
    <MudAlert Severity="Severity.Success">@message</MudAlert>
}
else if(message == "Ett fel har uppstått. Har du fyllt i allt korrekt?")
{
    <MudAlert Severity="Severity.Error">@message</MudAlert>
}

@code {
    public List<Seminarium> AllSeminars { get; set; }
    public Seminarium CreateSeminar { get; set; } = new();
    public DateTime TodaysDate { get; set; } = DateTime.Now;
    public string message = "";

    public async Task AddSeminar()
    {
        CreateSeminar.SeminarDate = TodaysDate;
        var result = await SeminarManager.CreateSeminar(CreateSeminar);
        if(result == $"Seminariet \"{CreateSeminar.Title}\" har lagts till")
        {
            message = $"\"{CreateSeminar.Title}\" har lagts till";
        }
        else if(result == "Gick ej att lägga till seminarium")
        {
            message = "Ett fel har uppstått. Har du fyllt i allt korrekt?";
        }
    }
}
